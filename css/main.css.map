{
"version": 3,
"file": "main.css",
"sources": [
"main.scss",
"_sass/_normalize.scss",
"_sass/bourbon/_bourbon.scss",
"_sass/bourbon/bourbon/helpers/_buttons-list.scss",
"_sass/bourbon/bourbon/helpers/_scales.scss",
"_sass/bourbon/bourbon/helpers/_text-inputs-list.scss",
"_sass/bourbon/bourbon/settings/_settings.scss",
"_sass/bourbon/bourbon/validators/_contains.scss",
"_sass/bourbon/bourbon/validators/_contains-falsy.scss",
"_sass/bourbon/bourbon/validators/_is-color.scss",
"_sass/bourbon/bourbon/validators/_is-length.scss",
"_sass/bourbon/bourbon/validators/_is-number.scss",
"_sass/bourbon/bourbon/validators/_is-size.scss",
"_sass/bourbon/bourbon/utilities/_assign-inputs.scss",
"_sass/bourbon/bourbon/utilities/_compact-shorthand.scss",
"_sass/bourbon/bourbon/utilities/_directional-property.scss",
"_sass/bourbon/bourbon/utilities/_fetch-bourbon-setting.scss",
"_sass/bourbon/bourbon/utilities/_font-source-declaration.scss",
"_sass/bourbon/bourbon/utilities/_gamma.scss",
"_sass/bourbon/bourbon/utilities/_lightness.scss",
"_sass/bourbon/bourbon/utilities/_contrast-ratio.scss",
"_sass/bourbon/bourbon/utilities/_unpack-shorthand.scss",
"_sass/bourbon/bourbon/library/_border-color.scss",
"_sass/bourbon/bourbon/library/_border-radius.scss",
"_sass/bourbon/bourbon/library/_border-style.scss",
"_sass/bourbon/bourbon/library/_border-width.scss",
"_sass/bourbon/bourbon/library/_buttons.scss",
"_sass/bourbon/bourbon/library/_clearfix.scss",
"_sass/bourbon/bourbon/library/_contrast-switch.scss",
"_sass/bourbon/bourbon/library/_ellipsis.scss",
"_sass/bourbon/bourbon/library/_font-face.scss",
"_sass/bourbon/bourbon/library/_font-stacks.scss",
"_sass/bourbon/bourbon/library/_hide-text.scss",
"_sass/bourbon/bourbon/library/_hide-visually.scss",
"_sass/bourbon/bourbon/library/_margin.scss",
"_sass/bourbon/bourbon/library/_modular-scale.scss",
"_sass/bourbon/bourbon/library/_overflow-wrap.scss",
"_sass/bourbon/bourbon/library/_padding.scss",
"_sass/bourbon/bourbon/library/_position.scss",
"_sass/bourbon/bourbon/library/_prefixer.scss",
"_sass/bourbon/bourbon/library/_shade.scss",
"_sass/bourbon/bourbon/library/_size.scss",
"_sass/bourbon/bourbon/library/_strip-unit.scss",
"_sass/bourbon/bourbon/library/_text-inputs.scss",
"_sass/bourbon/bourbon/library/_timing-functions.scss",
"_sass/bourbon/bourbon/library/_tint.scss",
"_sass/bourbon/bourbon/library/_triangle.scss",
"_sass/bourbon/bourbon/library/_value-prefixer.scss",
"neat/_neat.scss",
"neat/_neat-helpers.scss",
"neat/functions/_private.scss",
"neat/functions/_new-breakpoint.scss",
"neat/settings/_grid.scss",
"neat/settings/_visual-grid.scss",
"neat/settings/_disable-warnings.scss",
"neat/grid/_private.scss",
"neat/grid/_box-sizing.scss",
"neat/grid/_omega.scss",
"neat/grid/_outer-container.scss",
"neat/grid/_span-columns.scss",
"neat/grid/_row.scss",
"neat/grid/_shift.scss",
"neat/grid/_pad.scss",
"neat/grid/_fill-parent.scss",
"neat/grid/_media.scss",
"neat/grid/_to-deprecate.scss",
"neat/grid/_visual-grid.scss",
"neat/grid/_display-context.scss",
"neat/grid/_direction-context.scss",
"_sass/custom/_custom.scss",
"_sass/custom/_variables.scss",
"_sass/custom/_grid.scss",
"_sass/neat/_neat-helpers.scss",
"_sass/neat/functions/_private.scss",
"_sass/neat/functions/_new-breakpoint.scss",
"_sass/neat/settings/_grid.scss",
"_sass/neat/settings/_visual-grid.scss",
"_sass/neat/settings/_disable-warnings.scss",
"_sass/custom/_article_body.scss",
"_sass/custom/_article_meta.scss",
"_sass/custom/_article_peripheral.scss",
"_sass/custom/_audio.scss",
"_sass/custom/_base.scss",
"_sass/custom/_contacts.scss",
"_sass/custom/_featured_articles.scss",
"_sass/custom/_figure.scss",
"_sass/custom/_footnotes.scss",
"_sass/custom/_header_and_footer.scss",
"_sass/custom/_jekyll_linkpreview.scss",
"_sass/custom/_lists.scss",
"_sass/custom/_misc.scss",
"_sass/custom/_responsive_embed.scss",
"_sass/custom/_tables.scss",
"_sass/custom/_typography.scss"
],
"sourcesContent": [
"@charset \"utf-8\";\n\n// Import partials from `sass_dir` (defaults to `_sass`)\n\n@import \"normalize\"; // https://github.com/necolas/normalize.css\n@import \"bourbon/bourbon\"; // https://github.com/thoughtbot/bourbon\n@import \"neat/neat\"; // https://github.com/thoughtbot/neat\n@import \"custom/custom\";\n",
"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n",
"// Bourbon 7.0.0\n// https://www.bourbon.io/\n// Copyright 2011-2020 thoughtbot, inc.\n// MIT License\n\n@import \"bourbon/helpers/buttons-list\";\n@import \"bourbon/helpers/scales\";\n@import \"bourbon/helpers/text-inputs-list\";\n\n@import \"bourbon/settings/settings\";\n\n@import \"bourbon/validators/contains\";\n@import \"bourbon/validators/contains-falsy\";\n@import \"bourbon/validators/is-color\";\n@import \"bourbon/validators/is-length\";\n@import \"bourbon/validators/is-number\";\n@import \"bourbon/validators/is-size\";\n\n@import \"bourbon/utilities/assign-inputs\";\n@import \"bourbon/utilities/compact-shorthand\";\n@import \"bourbon/utilities/directional-property\";\n@import \"bourbon/utilities/fetch-bourbon-setting\";\n@import \"bourbon/utilities/font-source-declaration\";\n@import \"bourbon/utilities/gamma\";\n@import \"bourbon/utilities/lightness\";\n@import \"bourbon/utilities/contrast-ratio\";\n@import \"bourbon/utilities/unpack-shorthand\";\n\n@import \"bourbon/library/border-color\";\n@import \"bourbon/library/border-radius\";\n@import \"bourbon/library/border-style\";\n@import \"bourbon/library/border-width\";\n@import \"bourbon/library/buttons\";\n@import \"bourbon/library/clearfix\";\n@import \"bourbon/library/contrast-switch\";\n@import \"bourbon/library/ellipsis\";\n@import \"bourbon/library/font-face\";\n@import \"bourbon/library/font-stacks\";\n@import \"bourbon/library/hide-text\";\n@import \"bourbon/library/hide-visually\";\n@import \"bourbon/library/margin\";\n@import \"bourbon/library/modular-scale\";\n@import \"bourbon/library/overflow-wrap\";\n@import \"bourbon/library/padding\";\n@import \"bourbon/library/position\";\n@import \"bourbon/library/prefixer\";\n@import \"bourbon/library/shade\";\n@import \"bourbon/library/size\";\n@import \"bourbon/library/strip-unit\";\n@import \"bourbon/library/text-inputs\";\n@import \"bourbon/library/timing-functions\";\n@import \"bourbon/library/tint\";\n@import \"bourbon/library/triangle\";\n@import \"bourbon/library/value-prefixer\";\n",
"@charset \"UTF-8\";\n\n/// A list of all HTML button elements.\n///\n/// @type list\n///\n/// @access private\n\n$_buttons-list: (\n  \"button\",\n  \"[type='button']\",\n  \"[type='reset']\",\n  \"[type='submit']\",\n);\n",
"@charset \"UTF-8\";\n\n////\n/// Pre-defined scales for use with the `modular-scale` function.\n///\n/// @type number (unitless)\n///\n/// @see {function} modular-scale\n////\n\n$minor-second: 1.067;\n$major-second: 1.125;\n$minor-third: 1.2;\n$major-third: 1.25;\n$perfect-fourth: 1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth: 1.5;\n$minor-sixth: 1.6;\n$golden: 1.618;\n$major-sixth: 1.667;\n$minor-seventh: 1.778;\n$major-seventh: 1.875;\n$octave: 2;\n$major-tenth: 2.5;\n$major-eleventh: 2.667;\n$major-twelfth: 3;\n$double-octave: 4;\n",
"@charset \"UTF-8\";\n\n/// A list of all _text-based_ HTML inputs.\n///\n/// @type list\n///\n/// @access private\n\n$_text-inputs-list: (\n  \"[type='color']\",\n  \"[type='date']\",\n  \"[type='datetime']\",\n  \"[type='datetime-local']\",\n  \"[type='email']\",\n  \"[type='month']\",\n  \"[type='number']\",\n  \"[type='password']\",\n  \"[type='search']\",\n  \"[type='tel']\",\n  \"[type='text']\",\n  \"[type='time']\",\n  \"[type='url']\",\n  \"[type='week']\",\n  \"input:not([type])\",\n  \"textarea\",\n);\n",
"@charset \"UTF-8\";\n\n/// Default global Bourbon settings. Values in this map are overwritten by any\n/// values set in the `$bourbon` map.\n///\n/// @type map\n///\n/// @property {color} contrast-switch-dark-color [#000]\n///   Global dark color for the `contrast-switch` function.\n///\n/// @property {color} contrast-switch-light-color [#fff]\n///   Global light color for the `contrast-switch` function.\n///\n/// @property {list} global-font-file-formats [(\"woff2\", \"woff\")]\n///   Global font file formats for the `font-face` mixin.\n///\n/// @property {number (with unit)} modular-scale-base [1em]\n///   Global base value for the `modular-scale` function.\n///\n/// @property {number (unitless)} modular-scale-ratio [$major-third (1.25)]\n///   Global base ratio for the `modular-scale` function.\n///\n/// @property {boolean} rails-asset-pipeline [false]\n///   Set this to `true` when using the Rails Asset Pipeline and Bourbon will\n///   write asset paths using\n///   [sass-rails’ asset helpers](https://github.com/rails/sass-rails#asset-helpers).\n///\n/// @access private\n\n$_bourbon-defaults: (\n  \"contrast-switch-dark-color\": #000,\n  \"contrast-switch-light-color\": #fff,\n  \"global-font-file-formats\": (\"woff2\", \"woff\"),\n  \"modular-scale-base\": 1em,\n  \"modular-scale-ratio\": $major-third,\n  \"rails-asset-pipeline\": false,\n);\n\n/// Global Bourbon settings.\n///\n/// @name Settings\n///\n/// @type map\n///\n/// @property {color} contrast-switch-dark-color [#000]\n///   Global dark color for the `contrast-switch` function.\n///\n/// @property {color} contrast-switch-light-color [#fff]\n///   Global light color for the `contrast-switch` function.\n///\n/// @property {list} global-font-file-formats [(\"woff2\", \"woff\")]\n///   Global font file formats for the `font-face` mixin.\n///\n/// @property {number (with unit)} modular-scale-base [1em]\n///   Global base value for the `modular-scale` function.\n///\n/// @property {number (unitless)} modular-scale-ratio [$major-third (1.25)]\n///   Global base ratio for the `modular-scale` function.\n///\n/// @property {boolean} rails-asset-pipeline [false]\n///   Set this to `true` when using the Rails Asset Pipeline and Bourbon will\n///   write asset paths using\n///   [sass-rails’ asset helpers](https://github.com/rails/sass-rails#asset-helpers).\n///\n/// @example scss\n///   $bourbon: (\n///     \"contrast-switch-dark-color\": #000,\n///     \"contrast-switch-light-color\": #fff,\n///     \"global-font-file-formats\": (\"woff2\", \"woff\"),\n///     \"modular-scale-base\": 1em,\n///     \"modular-scale-ratio\": $major-third,\n///     \"rails-asset-pipeline\": false,\n///   );\n\n$bourbon: () !default;\n",
"@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @argument {list} $list\n///   The list to check against.\n///\n/// @argument {list} $values\n///   A single value or list of values to check for.\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _contains(\n  $list,\n  $values...\n) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n",
"@charset \"UTF-8\";\n\n/// Checks if a list does not contain any values.\n///\n/// @argument {list} $list\n///   The list to check against.\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n",
"@charset \"UTF-8\";\n\n/// Checks for a valid CSS color.\n///\n/// @argument {string} $color\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-color($color) {\n  @return (type-of($color) == color) or ($color == \"currentColor\");\n}\n",
"@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @argument {string} $value\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-length($value) {\n  @return type-of($value) != \"null\"\n    and (\n      str-slice($value + \"\", 1, 4) == \"calc\"\n      or str-slice($value + \"\", 1, 3) == \"var\"\n      or str-slice($value + \"\", 1, 3) == \"env\"\n      or index(auto inherit initial 0, $value)\n      or (type-of($value) == \"number\" and not(unitless($value)))\n    );\n}\n",
"@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @argument {number} $value\n///\n/// @require {function} _contains\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-number($value) {\n  @return _contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n",
"@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @argument {string} $value\n///\n/// @return {boolean}\n///\n/// @require {function} _contains\n///\n/// @require {function} _is-length\n///\n/// @access private\n\n@function _is-size($value) {\n  @return _is-length($value)\n    or _contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n",
"@charset \"UTF-8\";\n\n/// Append pseudo-classes to a selector(s).\n///\n/// @argument {list | string} $inputs\n///   A selector, or list of selectors, to apply the pseudo-class to.\n///\n/// @argument {pseudo-class} $pseudo [null]\n///   The pseudo-class to be appended.\n///\n/// @return {list}\n///\n/// @access private\n\n@function _assign-inputs(\n  $inputs,\n  $pseudo: null\n) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n",
"@charset \"UTF-8\";\n\n/// Transforms shorthand to its shortest possible form.\n///\n/// @argument {list} $values\n///   List of directional values.\n///\n/// @example scss\n///   $values: _compact-shorthand(10px 20px 10px 20px);\n///\n///   // Output\n///   $values: 10px 20px;\n///\n/// @return {list}\n///\n/// @access private\n\n@function _compact-shorthand($values) {\n  $output: null;\n\n  $a: nth($values, 1);\n  $b: if(length($values) < 2, $a, nth($values, 2));\n  $c: if(length($values) < 3, $a, nth($values, 3));\n  $d: if(length($values) < 2, $a, nth($values, if(length($values) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d {\n    $output: $a;\n  } @else if $a == $c and $b == $d {\n    $output: $a $b;\n  } @else if $b == $d {\n    $output: $a $b $c;\n  } @else {\n    $output: $a $b $c $d;\n  }\n\n  @return $output;\n}\n",
		"@charset \"UTF-8\";\n\n/// Builds directional properties by parsing CSS shorthand values. For example,\n/// a value of `10px null` will output top and bottom directional properties,\n/// but the `null` skips left and right from being output.\n///\n/// @argument {string} $property\n///   Base property.\n///\n/// @argument {string} $suffix\n///   Suffix to append. Use `null` to omit.\n///\n/// @argument {list} $values\n///   List of values to set for the property.\n///\n/// @example scss\n///   .element {\n///     @include _directional-property(border, width, null 5px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-right-width: 5px;\n///     border-left-width: 5px;\n///   }\n///\n/// @require {function} _compact-shorthand\n///\n/// @require {function} _contains-falsy\n///\n/// @access private\n\n@mixin _directional-property(\n  $property,\n  $suffix,\n  $values\n) {\n  $top: $property + \"-top\" + if($suffix, \"-#{$suffix}\", \"\");\n  $bottom: $property + \"-bottom\" + if($suffix, \"-#{$suffix}\", \"\");\n  $left: $property + \"-left\" + if($suffix, \"-#{$suffix}\", \"\");\n  $right: $property + \"-right\" + if($suffix, \"-#{$suffix}\", \"\");\n  $all: $property + if($suffix, \"-#{$suffix}\", \"\");\n\n  $values: _compact-shorthand($values);\n\n  @if _contains-falsy($values) {\n    @if nth($values, 1) { #{$top}: nth($values, 1); }\n\n    @if length($values) == 1 {\n      @if nth($values, 1) { #{$right}: nth($values, 1); }\n    } @else {\n      @if nth($values, 2) { #{$right}: nth($values, 2); }\n    }\n\n    @if length($values) == 2 {\n      @if nth($values, 1) { #{$bottom}: nth($values, 1); }\n      @if nth($values, 2) { #{$left}: nth($values, 2); }\n    } @else if length($values) == 3 {\n      @if nth($values, 3) { #{$bottom}: nth($values, 3); }\n      @if nth($values, 2) { #{$left}: nth($values, 2); }\n    } @else if length($values) == 4 {\n      @if nth($values, 3) { #{$bottom}: nth($values, 3); }\n      @if nth($values, 4) { #{$left}: nth($values, 4); }\n    }\n  } @else {\n    #{$all}: $values;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Return a Bourbon setting.\n///\n/// @argument {string} $setting\n///\n/// @return {boolean | color | list | number | string}\n///\n/// @example scss\n///   _fetch-bourbon-setting(rails-asset-pipeline)\n///\n/// @access private\n\n@function _fetch-bourbon-setting($setting) {\n  @return map-get(map-merge($_bourbon-defaults, $bourbon), $setting);\n}\n",
		"@charset \"UTF-8\";\n\n/// Builds the `src` list for an `@font-face` declaration.\n///\n/// @link https://goo.gl/Ru1bKP\n///\n/// @argument {string} $font-family\n///\n/// @argument {string} $file-path\n///\n/// @argument {boolean} $asset-pipeline\n///\n/// @argument {list} $file-formats\n///\n/// @return {list}\n///\n/// @require {function} _contains\n///\n/// @access private\n\n@function _font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats\n) {\n  $src: ();\n\n  $formats-map: (\n    \"woff2\": \"#{$file-path}.woff2\" format(\"woff2\"),\n    \"woff\": \"#{$file-path}.woff\" format(\"woff\"),\n  );\n\n  @each $format in $file-formats {\n    @if _contains(map-keys($formats-map), $format) {\n      $value: map-get($formats-map, $format);\n      $file-path: nth($value, 1);\n      $font-format: nth($value, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    } @else {\n      @error \"`#{$file-formats}` contains an unsupported font file format. \" +\n        \"Must be `woff` and/or `woff2`.\";\n    }\n  }\n\n  @return $src;\n}\n",
		"@charset \"UTF-8\";\n\n/// Performs gamma correction on a single color channel.\n///\n/// Note that the calculation is approximate if a `pow()` is not available.\n///\n/// @argument {number (0-1)} $channel\n///\n/// @return {number (0-1)}\n///\n/// @access private\n\n@function _gamma($channel) {\n  @if $channel < 0.03928 {\n    @return $channel / 12.92;\n  } @else {\n    $c: ($channel + 0.055) / 1.055;\n    @if function-exists(\"pow\") {\n      @return pow($c, 2.4);\n    } @else {\n      @return 0.56 * $c * $c * $c + 0.44 * $c * $c;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Programatically determines the lightness of a color.\n///\n/// @argument {color (hex)} $hex-color\n///\n/// @return {number (0-1)}\n///\n/// @example scss\n///   _lightness($color)\n///\n/// @access private\n\n@function _lightness($hex-color) {\n  $-local-red-raw: red(rgba($hex-color, 1));\n  $-local-green-raw: green(rgba($hex-color, 1));\n  $-local-blue-raw: blue(rgba($hex-color, 1));\n\n  $-local-red: _gamma($-local-red-raw / 255);\n  $-local-green: _gamma($-local-green-raw / 255);\n  $-local-blue: _gamma($-local-blue-raw / 255);\n\n  @return $-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722;\n}\n",
		"@charset \"UTF-8\";\n\n/// Programatically determines the contrast ratio between two colors.\n///\n/// Note that the alpha channel is ignored.\n///\n/// @link https://goo.gl/54htLV\n///\n/// @argument {color (hex)} $color-1\n///\n/// @argument {color (hex)} $color-2\n///\n/// @return {number (1-21)}\n///\n/// @example scss\n///   _contrast-ratio(black, white)\n///\n/// @require {function} _lightness\n///\n/// @access private\n\n@function _contrast-ratio($color-1, $color-2) {\n  $-local-lightness-1: _lightness($color-1) + 0.05;\n  $-local-lightness-2: _lightness($color-2) + 0.05;\n\n  @if $-local-lightness-1 > $-local-lightness-2 {\n    @return $-local-lightness-1 / $-local-lightness-2;\n  } @else {\n    @return $-local-lightness-2 / $-local-lightness-1;\n  }\n}\n",
  "@charset \"UTF-8\";\n\n/// Transforms shorthand that can range from 1-to-4 values to be 4 values.\n///\n/// @argument {list} $shorthand\n///\n/// @example scss\n///   .element {\n///     margin: _unpack-shorthand(1em 2em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n///\n/// @access private\n\n@function _unpack-shorthand($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n",
  "@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-color` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of colors; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-color($values) {\n  @include _directional-property(border, color, $values);\n}\n",
  "@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-left and top-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-top-radius(4px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-top-left-radius: 4px;\n///     border-top-right-radius: 4px;\n///   }\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-right and bottom-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-right-radius(3px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-right-radius: 3px;\n///     border-top-right-radius: 3px;\n///   }\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// bottom-left and bottom-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-bottom-radius(2px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-left-radius: 2px;\n///     border-bottom-right-radius: 2px;\n///   }\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-left and bottom-left of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-left-radius(1px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-left-radius: 1px;\n///     border-top-left-radius: 1px;\n///   }\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n",
  "@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-style` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of border styles; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-style($values) {\n  @include _directional-property(border, style, $values);\n}\n",
  "@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-width` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of border widths; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-width($values) {\n  @include _directional-property(border, width, $values);\n}\n",
  "@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @require {function} _assign-inputs\n///\n/// @require {variable} $_buttons-list\n////\n\n/// A list of all HTML button elements. Please note that you must interpolate\n/// the variable (`#{}`) to use it as a selector.\n///\n/// @example scss\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   // CSS Output\n///   button,\n///   [type='button'],\n///   [type='reset'],\n///   [type='submit'] {\n///     background-color: #f00;\n///   }\n\n$all-buttons: _assign-inputs($_buttons-list);\n\n/// A list of all HTML button elements with the `:active` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n///   // CSS Output\n///   button:active,\n///   [type='button']:active,\n///   [type='reset']:active,\n///   [type='submit']:active {\n///     background-color: #00f;\n///   }\n\n$all-buttons-active: _assign-inputs($_buttons-list, active);\n\n/// A list of all HTML button elements with the `:focus` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-focus} {\n///     background-color: #0f0;\n///   }\n///\n///   // CSS Output\n///   button:focus,\n///   [type='button']:focus,\n///   [type='reset']:focus,\n///   [type='submit']:focus {\n///     background-color: #0f0;\n///   }\n\n$all-buttons-focus: _assign-inputs($_buttons-list, focus);\n\n/// A list of all HTML button elements with the `:hover` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   // CSS Output\n///   button:hover,\n///   [type='button']:hover,\n///   [type='reset']:hover,\n///   [type='submit']:hover {\n///     background-color: #0f0;\n///   }\n\n$all-buttons-hover: _assign-inputs($_buttons-list, hover);\n",
  "@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link https://goo.gl/yP5hiZ\n///\n/// @example scss\n///   .element {\n///     @include clearfix;\n///   }\n///\n///   // CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n",
  "@charset \"UTF-8\";\n\n/// Switches between two colors based on the contrast to another color. It’s\n/// like a [ternary operator] for color contrast and can be useful for building\n/// a button system.\n///\n/// The calculation of the contrast ratio is based on the [WCAG 2.0\n/// specification]. However, we cannot guarantee full compliance, though all of\n/// our manual testing passed.\n///\n///   [ternary operator]: https://goo.gl/ccfLqi\n///   [WCAG 2.0 specification]: https://goo.gl/zhQuYA\n///\n/// @argument {color} $base-color\n///   The color to evaluate lightness against.\n///\n/// @argument {color} $dark-color [#000]\n///   The color to be output when `$base-color` is light. Can also be set\n///   globally using the `contrast-switch-dark-color` key in the\n///   Bourbon settings.\n///\n/// @argument {color} $light-color [#fff]\n///   The color to be output when `$base-color` is dark. Can also be set\n///   globally using the `contrast-switch-light-color` key in the\n///   Bourbon settings.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     color: contrast-switch(#bae6e6);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     color: #000;\n///   }\n///\n/// @example scss\n///   .element {\n///     $button-color: #2d72d9;\n///     background-color: $button-color;\n///     color: contrast-switch($button-color, #222, #eee);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #2d72d9;\n///     color: #eee;\n///   }\n///\n/// @require {function} _fetch-bourbon-setting\n///\n/// @require {function} _is-color\n///\n/// @require {function} _contrast-ratio\n///\n/// @since 5.0.0\n\n@function contrast-switch(\n  $base-color,\n  $dark-color: _fetch-bourbon-setting(\"contrast-switch-dark-color\"),\n  $light-color: _fetch-bourbon-setting(\"contrast-switch-light-color\")\n) {\n  @if not _is-color($base-color) {\n    @error \"`#{$base-color}` is not a valid color for the `$base-color` \" +\n      \"argument in the `contrast-switch` function.\";\n  } @else if not _is-color($dark-color) {\n    @error \"`#{$dark-color}` is not a valid color for the `$dark-color` \" +\n      \"argument in the `contrast-switch` function.\";\n  } @else if not _is-color($light-color) {\n    @error \"`#{$light-color}` is not a valid color for the `$light-color` \" +\n      \"argument in the `contrast-switch` function.\";\n  } @else {\n    $-contrast-to-dark: _contrast-ratio($base-color, $dark-color);\n    $-contrast-to-light: _contrast-ratio($base-color, $light-color);\n    $-prefer-dark: $-contrast-to-dark >= $-contrast-to-light;\n\n    @return if($-prefer-dark, $dark-color, $light-color);\n  }\n}\n",
  "@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @argument {number} $width [100%]\n///   The `max-width` for the string to respect before being truncated.\n///\n/// @argument {string} $display [inline-block]\n///   Sets the display-value of the element.\n///\n/// @example scss\n///   .element {\n///     @include ellipsis;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis(\n  $width: 100%,\n  $display: inline-block\n) {\n  display: $display;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n",
  "@charset \"UTF-8\";\n\n/// Generates an `@font-face` declaration. You can choose the specific file\n/// formats you need to output; the mixin supports `woff2`\n/// and `woff`. The mixin also supports usage with the Rails Asset Pipeline,\n/// which you can enable per use, or globally in the `$bourbon()` settings.\n///\n/// @argument {string} $font-family\n///\n/// @argument {string} $file-path\n///\n/// @argument {string | list} $file-formats [(\"woff2\", \"woff\")]\n///   List of the font file formats to include. Can also be set globally using\n///   the `global-font-file-formats` key in the Bourbon settings.\n///\n/// @argument {boolean} $asset-pipeline [false]\n///   Set to `true` if you’re using the Rails Asset Pipeline (place the fonts\n///   in `app/assets/fonts/`). Can also be set globally using the\n///   `rails-asset-pipeline` key in the Bourbon settings.\n///\n/// @content\n///   Any additional CSS properties that are included in the `@include`\n///   directive will be output within the `@font-face` declaration, e.g. you can\n///   pass in `font-weight`, `font-style` and/or `unicode-range`.\n///\n/// @example scss\n///   @include font-face(\n///     \"source-sans-pro\",\n///     \"fonts/source-sans-pro-regular\",\n///     (\"woff2\", \"woff\")\n///   ) {\n///     font-style: normal;\n///     font-weight: 400;\n///   }\n///\n///   // CSS Output\n///   @font-face {\n///     font-family: \"source-sans-pro\";\n///     src: url(\"fonts/source-sans-pro-regular.woff2\") format(\"woff2\"),\n///          url(\"fonts/source-sans-pro-regular.woff\") format(\"woff\");\n///     font-style: normal;\n///     font-weight: 400;\n///   }\n///\n/// @require {function} _font-source-declaration\n///\n/// @require {function} _fetch-bourbon-setting\n\n@mixin font-face(\n  $font-family,\n  $file-path,\n  $file-formats: _fetch-bourbon-setting(\"global-font-file-formats\"),\n  $asset-pipeline: _fetch-bourbon-setting(\"rails-asset-pipeline\")\n) {\n  @font-face {\n    font-family: $font-family;\n    src: _font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats\n    );\n    @content;\n  }\n}\n",
  "@charset \"UTF-8\";\n\n/// A variable that outputs a Helvetica font stack.\n///\n/// @link https://goo.gl/uSJvZe\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-helvetica;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n///   }\n\n$font-stack-helvetica: (\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Arial\",\n  sans-serif,\n);\n\n/// A variable that outputs a Lucida Grande font stack.\n///\n/// @link https://goo.gl/R5UyYE\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-lucida-grande;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Lucida Grande\", \"Lucida Sans Unicode\", \"Geneva\", \"Verdana\", sans-serif;\n///   }\n\n$font-stack-lucida-grande: (\n  \"Lucida Grande\",\n  \"Lucida Sans Unicode\",\n  \"Geneva\",\n  \"Verdana\",\n  sans-serif,\n);\n\n/// A variable that outputs a Verdana font stack.\n///\n/// @link https://goo.gl/yGXWSS\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-verdana;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Verdana\", \"Geneva\", sans-serif;\n///   }\n\n$font-stack-verdana: (\n  \"Verdana\",\n  \"Geneva\",\n  sans-serif,\n);\n\n/// A variable that outputs a system font stack.\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-system;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Avenir Next\", \"Avenir\", \"Segoe UI\", \"Lucida Grande\", \"Helvetica Neue\", \"Helvetica\", \"Fira Sans\", \"Roboto\", \"Noto\", \"Droid Sans\", \"Cantarell\", \"Oxygen\", \"Ubuntu\", \"Franklin Gothic Medium\", \"Century Gothic\", \"Liberation Sans\", sans-serif;\n///   }\n\n$font-stack-system: (\n  system-ui,\n  -apple-system,\n  BlinkMacSystemFont,\n  \"Avenir Next\",\n  \"Avenir\",\n  \"Segoe UI\",\n  \"Lucida Grande\",\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Fira Sans\",\n  \"Roboto\",\n  \"Noto\",\n  \"Droid Sans\",\n  \"Cantarell\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Franklin Gothic Medium\",\n  \"Century Gothic\",\n  \"Liberation Sans\",\n  sans-serif,\n);\n\n/// A variable that outputs a Garamond font stack.\n///\n/// @link https://goo.gl/QQFEkV\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-garamond;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Garamond\", \"Baskerville\", \"Baskerville Old Face\", \"Hoefler Text\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-garamond: (\n  \"Garamond\",\n  \"Baskerville\",\n  \"Baskerville Old Face\",\n  \"Hoefler Text\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Georgia font stack.\n///\n/// @link https://goo.gl/wtzVPy\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-georgia;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Georgia\", \"Times\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-georgia: (\n  \"Georgia\",\n  \"Times\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Hoefler Text font stack.\n///\n/// @link https://goo.gl/n7U7zx\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-hoefler-text;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Hoefler Text\", \"Baskerville Old Face\", \"Garamond\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-hoefler-text: (\n  \"Hoefler Text\",\n  \"Baskerville Old Face\",\n  \"Garamond\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Consolas font stack.\n///\n/// @link https://goo.gl/iKrtqv\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-consolas;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Consolas\", \"monaco\", monospace;\n///   }\n\n$font-stack-consolas: (\n  \"Consolas\",\n  \"monaco\",\n  monospace,\n);\n\n/// A variable that outputs a Courier New font stack.\n///\n/// @link https://goo.gl/bHfWMP\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-courier-new;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Courier New\", \"Courier\", \"Lucida Sans Typewriter\", \"Lucida Typewriter\", monospace;\n///   }\n\n$font-stack-courier-new: (\n  \"Courier New\",\n  \"Courier\",\n  \"Lucida Sans Typewriter\",\n  \"Lucida Typewriter\",\n  monospace,\n);\n\n/// A variable that outputs a Monaco font stack.\n///\n/// @link https://goo.gl/9PgKDO\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-monaco;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Monaco\", \"Consolas\", \"Lucida Console\", monospace;\n///   }\n\n$font-stack-monaco: (\n  \"Monaco\",\n  \"Consolas\",\n  \"Lucida Console\",\n  monospace,\n);\n",
  "@charset \"UTF-8\";\n\n/// Hides the text in an element, commonly used to show an image instead. Some\n/// elements will need block-level styles applied.\n///\n/// @link https://goo.gl/EvLRIu\n///\n/// @example scss\n///   .element {\n///     @include hide-text;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n\n@mixin hide-text {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n}\n",
  "@charset \"UTF-8\";\n\n/// Hides an element visually while still allowing the content to be accessible\n/// to assistive technology, e.g. screen readers. Passing `unhide` will reverse\n/// the affects of the hiding, which is handy for showing the element on focus,\n/// for example.\n///\n/// @link https://goo.gl/Vf1TGn\n///\n/// @argument {string} $toggle [hide]\n///   Accepts `hide` or `unhide`. `unhide` reverses the affects of `hide`.\n///\n/// @example scss\n///   .element {\n///     @include hide-visually;\n///\n///     &:active,\n///     &:focus {\n///       @include hide-visually(\"unhide\");\n///     }\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border: 0;\n///     clip: rect(1px, 1px, 1px, 1px);\n///     clip-path: inset(100%);\n///     height: 1px;\n///     overflow: hidden;\n///     padding: 0;\n///     position: absolute;\n///     width: 1px;\n///   }\n///\n///   .hide-visually:active,\n///   .hide-visually:focus {\n///     clip: auto;\n///     clip-path: none;\n///     height: auto;\n///     overflow: visible;\n///     position: static;\n///     width: auto;\n///   }\n///\n/// @since 5.0.0\n\n@mixin hide-visually($toggle: \"hide\") {\n  @if not index(\"hide\" \"unhide\", $toggle) {\n    @error \"`#{$toggle}` is not a valid value for the `$toggle` argument in \" +\n      \"the `hide-visually` mixin. Must be either `hide` or `unhide`.\";\n  } @else if $toggle == \"hide\" {\n    border: 0;\n    clip: rect(1px, 1px, 1px, 1px);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  } @else if $toggle == \"unhide\" {\n    clip: auto;\n    clip-path: none;\n    height: auto;\n    overflow: visible;\n    position: static;\n    white-space: inherit;\n    width: auto;\n  }\n}\n",
  "@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `margin` on specific edges\n/// of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of margin values; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include margin(null auto);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n/// @example scss\n///   .element {\n///     @include margin(10px 3em 20vh null);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-bottom: 20vh;\n///     margin-right: 3em;\n///     margin-top: 10px;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin margin($values) {\n  @include _directional-property(margin, null, $values);\n}\n",
  "@charset \"UTF-8\";\n\n/// Increments up or down a defined scale and returns an adjusted value. This\n/// helps establish consistent measurements and spacial relationships throughout\n/// your project. We provide a list of commonly used scales as\n/// [pre-defined variables][scales].\n///\n/// [scales]: https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/helpers/_scales.scss\n///\n/// @argument {number (unitless)} $increment\n///   How many steps to increment up or down the scale.\n///\n/// @argument {number (with unit) | list} $value [1em]\n///   The base value the scale starts at. Can also be set globally using the\n///   `modular-scale-base` key in the Bourbon settings.\n///\n/// @argument {number (unitless)} $ratio [1.25]\n///   The ratio the scale is built on. Can also be set globally using the\n///   `modular-scale-ratio` key in the Bourbon settings.\n///\n/// @return {number (with unit)}\n///\n/// @example scss\n///   .element {\n///     font-size: modular-scale(2);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 1.5625em;\n///   }\n///\n/// @example scss\n///   .element {\n///     margin-right: modular-scale(3, 2em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-right: 3.90625em;\n///   }\n///\n/// @example scss\n///   .element {\n///     font-size: modular-scale(3, 1em 1.6em, $major-seventh);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 3em;\n///   }\n///\n/// @example scss\n///   // Globally change the base ratio\n///   $bourbon: (\n///     \"modular-scale-ratio\": 1.2,\n///   );\n///\n///   .element {\n///     font-size: modular-scale(3);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 1.728em;\n///   }\n///\n/// @require {function} _fetch-bourbon-setting\n\n@function modular-scale(\n  $increment,\n  $value: _fetch-bourbon-setting(\"modular-scale-base\"),\n  $ratio: _fetch-bourbon-setting(\"modular-scale-ratio\")\n) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n",
		"@charset \"UTF-8\";\n\n/// Outputs the `overflow-wrap` property and its legacy name `word-wrap` to\n/// support browsers that do not yet use `overflow-wrap`.\n///\n/// @argument {string} $wrap [break-word]\n///   Accepted CSS values are `normal`, `break-word`, `inherit`, `initial`,\n///   or `unset`.\n///\n/// @example scss\n///   .wrapper {\n///     @include overflow-wrap;\n///   }\n///\n///   // CSS Output\n///   .wrapper {\n///     word-wrap: break-word;\n///     overflow-wrap: break-word;\n///   }\n\n@mixin overflow-wrap($wrap: break-word) {\n  word-wrap: $wrap;\n  // stylelint-disable-next-line order/properties-alphabetical-order\n  overflow-wrap: $wrap;\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise method for targeting `padding` on specific sides of a\n/// box. Use a `null` value to “skip” a side.\n///\n/// @argument {list} $values\n///   List of padding values; accepts CSS shorthand.\n///\n/// @example scss\n///   .element-one {\n///     @include padding(null 1rem);\n///   }\n///\n///   // CSS Output\n///   .element-one {\n///     padding-left: 1rem;\n///     padding-right: 1rem;\n///   }\n///\n/// @example scss\n///   .element-two {\n///     @include padding(10vh null 10px 5%);\n///   }\n///\n///   // CSS Output\n///   .element-two {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 10vh;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin padding($values) {\n  @include _directional-property(padding, null, $values);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting an element’s positioning\n/// properties: `position`, `top`, `right`, `bottom` and `left`. Use a `null`\n/// value to “skip” an edge of the box.\n///\n/// @argument {string} $position\n///   A CSS position value.\n///\n/// @argument {list} $box-edge-values\n///   List of lengths; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include position(relative, 0 null null 10em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     left: 10em;\n///     position: relative;\n///     top: 0;\n///   }\n///\n/// @example scss\n///   .element {\n///     @include position(absolute, 0);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     position: absolute;\n///     top: 0;\n///     right: 0;\n///     bottom: 0;\n///     left: 0;\n///   }\n///\n/// @require {function} _is-length\n///\n/// @require {function} _unpack-shorthand\n\n@mixin position(\n  $position,\n  $box-edge-values\n) {\n  $box-edge-values: _unpack-shorthand($box-edge-values);\n  $offsets: (\n    \"top\": nth($box-edge-values, 1),\n    \"right\": nth($box-edge-values, 2),\n    \"bottom\": nth($box-edge-values, 3),\n    \"left\": nth($box-edge-values, 4),\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if _is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates vendor prefixes.\n///\n/// @argument {string} $property\n///   Property to prefix.\n///\n/// @argument {string} $value\n///   Value to use.\n///\n/// @argument {list} $prefixes\n///   Vendor prefixes to output.\n///\n/// @example scss\n///   .element {\n///     @include prefixer(appearance, none, (\"webkit\", \"moz\"));\n///   }\n///\n///   // CSS Output\n///   .element {\n///     -webkit-appearance: none;\n///     -moz-appearance: none;\n///     appearance: none;\n///   }\n///\n/// @author Hugo Giraudel\n\n@mixin prefixer(\n  $property,\n  $value,\n  $prefixes: ()\n) {\n  @each $prefix in $prefixes {\n    #{\"-\" + $prefix + \"-\" + $property}: $value;\n  }\n  #{$property}: $value;\n}\n",
		"@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n\n@function shade(\n  $color,\n  $percent\n) {\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n      \"the `shade` mixin.\";\n  } @else {\n    @return mix(#000, $color, $percent);\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element in one statement.\n///\n/// @argument {number (with unit) | string} $width\n///\n/// @argument {number (with unit) | string} $height [$width]\n///\n/// @example scss\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   // CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n/// @example scss\n///   .second-element {\n///     @include size(auto, 10em);\n///   }\n///\n///   // CSS Output\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @require {function} _is-size\n\n@mixin size(\n  $width,\n  $height: $width\n) {\n  @if _is-size($height) {\n    height: $height;\n  } @else {\n    @error \"`#{$height}` is not a valid length for the `$height` argument \" +\n      \"in the `size` mixin.\";\n  }\n\n  @if _is-size($width) {\n    width: $width;\n  } @else {\n    @error \"`#{$width}` is not a valid length for the `$width` argument \" +\n      \"in the `size` mixin.\";\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @argument {number} $value\n///\n/// @return {number (unitless)}\n///\n/// @example scss\n///   $dimension: strip-unit(10em);\n///\n///   // Output\n///   $dimension: 10;\n\n@function strip-unit($value) {\n  @return ($value / ($value * 0 + 1));\n}\n",
		"@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @require {function} _assign-inputs\n///\n/// @require {variable} $_text-inputs-list\n////\n\n/// A list of all _text-based_ HTML inputs. Please note that you must\n/// interpolate the variable (`#{}`) to use it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs} {\n///     border: 1px solid #ccc;\n///   }\n///\n///   // CSS Output\n///   [type='color'],\n///   [type='date'],\n///   [type='datetime'],\n///   [type='datetime-local'],\n///   [type='email'],\n///   [type='month'],\n///   [type='number'],\n///   [type='password'],\n///   [type='search'],\n///   [type='tel'],\n///   [type='text'],\n///   [type='time'],\n///   [type='url'],\n///   [type='week'],\n///   input:not([type]),\n///   textarea {\n///     border: 1px solid #ccc;\n///   }\n\n$all-text-inputs: _assign-inputs($_text-inputs-list);\n\n/// A list of all _text-based_ HTML inputs with the `:active` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #aaa;\n///   }\n///\n///   // CSS Output\n///   [type='color']:active,\n///   [type='date']:active,\n///   [type='datetime']:active,\n///   [type='datetime-local']:active,\n///   [type='email']:active,\n///   [type='month']:active,\n///   [type='number']:active,\n///   [type='password']:active,\n///   [type='search']:active,\n///   [type='tel']:active,\n///   [type='text']:active,\n///   [type='time']:active,\n///   [type='url']:active,\n///   [type='week']:active,\n///   input:not([type]):active,\n///   textarea:active {\n///     border: 1px solid #aaa;\n///   }\n\n$all-text-inputs-active: _assign-inputs($_text-inputs-list, active);\n\n/// A list of all _text-based_ HTML inputs with the `:focus` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-focus} {\n///     border: 1px solid #1565c0;\n///   }\n///\n///   // CSS Output\n///   [type='color']:focus,\n///   [type='date']:focus,\n///   [type='datetime']:focus,\n///   [type='datetime-local']:focus,\n///   [type='email']:focus,\n///   [type='month']:focus,\n///   [type='number']:focus,\n///   [type='password']:focus,\n///   [type='search']:focus,\n///   [type='tel']:focus,\n///   [type='text']:focus,\n///   [type='time']:focus,\n///   [type='url']:focus,\n///   [type='week']:focus,\n///   input:not([type]):focus,\n///   textarea:focus {\n///     border: 1px solid #1565c0;\n///   }\n\n$all-text-inputs-focus: _assign-inputs($_text-inputs-list, focus);\n\n/// A list of all _text-based_ HTML inputs with the `:hover` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #aaa;\n///   }\n///\n///   // CSS Output\n///   [type='color']:hover,\n///   [type='date']:hover,\n///   [type='datetime']:hover,\n///   [type='datetime-local']:hover,\n///   [type='email']:hover,\n///   [type='month']:hover,\n///   [type='number']:hover,\n///   [type='password']:hover,\n///   [type='search']:hover,\n///   [type='tel']:hover,\n///   [type='text']:hover,\n///   [type='time']:hover,\n///   [type='url']:hover,\n///   [type='week']:hover,\n///   input:not([type]):hover,\n///   textarea:hover {\n///     border: 1px solid #aaa;\n///   }\n\n$all-text-inputs-hover: _assign-inputs($_text-inputs-list, hover);\n\n/// A list of all _text-based_ HTML inputs with the `:invalid` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-invalid} {\n///     border: 1px solid #00f;\n///   }\n///\n///   // CSS Output\n///   [type='color']:invalid,\n///   [type='date']:invalid,\n///   [type='datetime']:invalid,\n///   [type='datetime-local']:invalid,\n///   [type='email']:invalid,\n///   [type='month']:invalid,\n///   [type='number']:invalid,\n///   [type='password']:invalid,\n///   [type='search']:invalid,\n///   [type='tel']:invalid,\n///   [type='text']:invalid,\n///   [type='time']:invalid,\n///   [type='url']:invalid,\n///   [type='week']:invalid,\n///   input:not([type]):invalid,\n///   textarea:invalid {\n///     border: 1px solid #00f;\n///   }\n\n$all-text-inputs-invalid: _assign-inputs($_text-inputs-list, invalid);\n",
		"@charset \"UTF-8\";\n\n////\n/// CSS cubic-bezier timing functions.\n///\n/// @link https://goo.gl/p8u6SK\n///\n/// @type string\n////\n\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n",
		"@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n\n@function tint(\n  $color,\n  $percent\n) {\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n      \"the `tint` mixin.\";\n  } @else {\n    @return mix(#fff, $color, $percent);\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates a triangle pointing in a specified direction.\n///\n/// @argument {string} $direction\n///   The direction the triangle should point. Accepts `up`, `up-right`,\n///   `right`, `down-right`, `down`, `down-left`, `left` or `up-left`.\n///\n/// @argument {number (with unit)} $width\n///   Width of the triangle.\n///\n/// @argument {number (with unit)} $height\n///   Height of the triangle.\n///\n/// @argument {color} $color\n///   Color of the triangle.\n///\n/// @example scss\n///   .element {\n///     &::before {\n///       @include triangle(\"up\", 2rem, 1rem, #b25c9c);\n///       content: \"\";\n///     }\n///   }\n///\n///   // CSS Output\n///   .element::before {\n///     border-style: solid;\n///     height: 0;\n///     width: 0;\n///     border-color: transparent transparent #b25c9c;\n///     border-width: 0 1rem 1rem;\n///     content: \"\";\n///   }\n\n@mixin triangle(\n  $direction,\n  $width,\n  $height,\n  $color\n) {\n  @if not index(\n    \"up\" \"up-right\" \"right\" \"down-right\" \"down\" \"down-left\" \"left\" \"up-left\",\n    $direction\n  ) {\n    @error \"Direction must be `up`, `up-right`, `right`, `down-right`, \" +\n      \"`down`, `down-left`, `left` or `up-left`.\";\n  } @else if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n      \"the `triangle` mixin.\";\n  } @else {\n    border-style: solid;\n    height: 0;\n    width: 0;\n\n    @if $direction == \"up\" {\n      border-color: transparent transparent $color;\n      border-width: 0 ($width / 2) $height;\n    } @else if $direction == \"up-right\" {\n      border-color: transparent $color transparent transparent;\n      border-width: 0 $width $width 0;\n    } @else if $direction == \"right\" {\n      border-color: transparent transparent transparent $color;\n      border-width: ($height / 2) 0 ($height / 2) $width;\n    } @else if $direction == \"down-right\" {\n      border-color: transparent transparent $color;\n      border-width: 0 0 $width $width;\n    } @else if $direction == \"down\" {\n      border-color: $color transparent transparent;\n      border-width: $height ($width / 2) 0;\n    } @else if $direction == \"down-left\" {\n      border-color: transparent transparent transparent $color;\n      border-width: $width 0 0 $width;\n    } @else if $direction == \"left\" {\n      border-color: transparent $color transparent transparent;\n      border-width: ($height / 2) $width ($height / 2) 0;\n    } @else if $direction == \"up-left\" {\n      border-color: $color transparent transparent;\n      border-width: $width $width 0 0;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates vendor prefixes for values.\n///\n/// @argument {string} $property\n///   Property to use.\n///\n/// @argument {string} $value\n///   Value to prefix.\n///\n/// @argument {list} $prefixes\n///   Vendor prefixes to output.\n///\n/// @example scss\n///   .element {\n///     @include value-prefixer(cursor, grab, (\"webkit\", \"moz\"));\n///   }\n///\n///   // CSS Output\n///   .element {\n///     cursor: -webkit-grab;\n///     cursor: -moz-grab;\n///     cursor: grab;\n///   }\n///\n/// @author Matthew Tobiasz\n\n@mixin value-prefixer(\n  $property,\n  $value,\n  $prefixes: ()\n) {\n  @each $prefix in $prefixes {\n    #{$property}: #{\"-\" + $prefix + \"-\" + $value};\n  }\n  #{$property}: $value;\n}\n",
		"// Neat 1.7.4\n// http://neat.bourbon.io\n// Copyright 2012-2015 thoughtbot, inc.\n// MIT License\n\n// Helpers\n@import \"neat-helpers\";\n\n// Grid\n@import \"grid/private\";\n@import \"grid/box-sizing\";\n@import \"grid/omega\";\n@import \"grid/outer-container\";\n@import \"grid/span-columns\";\n@import \"grid/row\";\n@import \"grid/shift\";\n@import \"grid/pad\";\n@import \"grid/fill-parent\";\n@import \"grid/media\";\n@import \"grid/to-deprecate\";\n@import \"grid/visual-grid\";\n@import \"grid/display-context\";\n@import \"grid/direction-context\";\n",
		"// Functions\n@import \"functions/private\";\n@import \"functions/new-breakpoint\";\n\n// Settings\n@import \"settings/grid\";\n@import \"settings/visual-grid\";\n@import \"settings/disable-warnings\";\n",
		"// Not function for Libsass compatibility\n// https://github.com/sass/libsass/issues/368\n@function is-not($value) {\n  @return if($value, false, true);\n}\n\n// Checks if a number is even\n@function is-even($int) {\n  @return $int % 2 == 0;\n}\n\n// Checks if an element belongs to a list or not\n@function belongs-to($tested-item, $list) {\n  @return is-not(not-belongs-to($tested-item, $list));\n}\n\n@function not-belongs-to($tested-item, $list) {\n  @return is-not(index($list, $tested-item));\n}\n\n// Contains display value\n@function contains-display-value($query) {\n  @return belongs-to(table, $query)\n       or belongs-to(block, $query)\n       or belongs-to(inline-block, $query)\n       or belongs-to(inline, $query);\n}\n\n// Parses the first argument of span-columns()\n@function container-span($span: $span) {\n  @if length($span) == 3 {\n    $container-columns: nth($span, 3);\n    @return $container-columns;\n  } @else if length($span) == 2 {\n    $container-columns: nth($span, 2);\n    @return $container-columns;\n  }\n\n  @return $grid-columns;\n}\n\n@function container-shift($shift: $shift) {\n  $parent-columns: $grid-columns !default !global;\n\n  @if length($shift) == 3 {\n    $container-columns: nth($shift, 3);\n    @return $container-columns;\n  } @else if length($shift) == 2 {\n    $container-columns: nth($shift, 2);\n    @return $container-columns;\n  }\n\n  @return $parent-columns;\n}\n\n// Generates a striped background\n@function gradient-stops($grid-columns, $color: $visual-grid-color) {\n  $transparent: transparent;\n\n  $column-width: flex-grid(1, $grid-columns);\n  $gutter-width: flex-gutter($grid-columns);\n  $column-offset: $column-width;\n\n  $values: ($transparent 0, $color 0);\n\n  @for $i from 1 to $grid-columns*2 {\n    @if is-even($i) {\n      $values: append($values, $transparent $column-offset, comma);\n      $values: append($values, $color $column-offset, comma);\n      $column-offset: $column-offset + $column-width;\n    } @else {\n      $values: append($values, $color $column-offset, comma);\n      $values: append($values, $transparent $column-offset, comma);\n      $column-offset: $column-offset + $gutter-width;\n    }\n  }\n\n  @return $values;\n}\n\n// Layout direction\n@function get-direction($layout, $default) {\n  $direction: null;\n\n  @if to-upper-case($layout) == \"LTR\" or to-upper-case($layout) == \"RTL\" {\n    $direction: direction-from-layout($layout);\n  } @else {\n    $direction: direction-from-layout($default);\n  }\n\n  @return $direction;\n}\n\n@function direction-from-layout($layout) {\n  $direction: null;\n\n  @if to-upper-case($layout) == \"LTR\" {\n    $direction: right;\n  } @else {\n    $direction: left;\n  }\n\n  @return $direction;\n}\n\n@function get-opposite-direction($direction) {\n  $opposite-direction: left;\n\n  @if $direction == \"left\" {\n    $opposite-direction: right;\n  }\n\n  @return $opposite-direction;\n}\n",
		"@charset \"UTF-8\";\n\n/// Returns a media context (media query / grid context) that can be stored in a variable and passed to `media()` as a single-keyword argument. Media contexts defined using `new-breakpoint` are used by the visual grid, as long as they are defined before importing Neat.\n///\n/// @param {List} $query\n///   A list of media query features and values. Each `$feature` should have a corresponding `$value`.\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`). For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n/// @param {Number (unitless)} $total-columns [$grid-columns]\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   $mobile: new-breakpoint(max-width 480px 4);\n///\n///   .element {\n///     @include media($mobile) {\n///       @include span-columns(4);\n///     }\n///   }\n///\n/// @example css - CSS Output\n///   @media screen and (max-width: 480px) {\n///     .element {\n///       display: block;\n///       float: left;\n///       margin-right: 7.42297%;\n///       width: 100%;\n///     }\n///     .element:last-child {\n///       margin-right: 0;\n///     }\n///   }\n\n@function new-breakpoint($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    $query: $default-feature nth($query, 1) $total-columns;\n  } @else if is-even(length($query)) {\n    $query: append($query, $total-columns);\n  }\n\n  @if is-not(belongs-to($query, $visual-grid-breakpoints)) {\n    $visual-grid-breakpoints: append($visual-grid-breakpoints, $query, comma) !global;\n  }\n\n  @return $query;\n}\n",
		"@charset \"UTF-8\";\n\n/// Sets the relative width of a single grid column. The unit used should be the same one used to define `$gutter`. To learn more about `modular-scale()` see [Bourbon docs](http://bourbon.io/docs/#modular-scale). Set with a `!global` flag.\n///\n/// @type Number (Unit)\n\n$column: modular-scale(3, 1em, $golden) !default;\n\n/// Sets the relative width of a single grid gutter. The unit used should be the same one used to define `$column`. To learn more about `modular-scale()` see [Bourbon docs](http://bourbon.io/docs/#modular-scale). Set with the `!global` flag.\n///\n/// @type Number (Unit)\n\n$gutter: modular-scale(1, 1em, $golden) !default;\n\n/// Sets the total number of columns in the grid. Its value can be overridden inside a media query using the `media()` mixin. Set with the `!global` flag.\n///\n/// @type Number (Unitless)\n\n$grid-columns: 12 !default;\n\n/// Sets the max-width property of the element that includes `outer-container()`. Set with the `!global` flag.\n///\n/// @type Number (Unit)\n///\n$max-width: 1200px !default;\n\n/// When set to true, it sets the box-sizing property of all elements to `border-box`. Set with a `!global` flag.\n///\n/// @type Bool\n///\n/// @example css - CSS Output\n///   html {\n///     box-sizing: border-box; }\n///\n///   *, *::after, *::before {\n///     box-sizing: inherit;\n///   }\n\n$border-box-sizing: true !default;\n\n/// Sets the default [media feature](http://www.w3.org/TR/css3-mediaqueries/#media) that `media()` and `new-breakpoint()` revert to when only a breakpoint value is passed. Set with a `!global` flag.\n///\n/// @type String\n\n$default-feature: min-width; // Default @media feature for the breakpoint() mixin\n\n///Sets the default layout direction of the grid. Can be `LTR` or `RTL`. Set with a `!global` flag.\n///\n///@type String\n\n$default-layout-direction: LTR !default;\n",
		"@charset \"UTF-8\";\n\n/// Displays the visual grid when set to true. The overlaid grid may be few pixels off depending on the browser's rendering engine and pixel rounding algorithm. Set with the `!global` flag.\n///\n/// @type Bool\n\n$visual-grid: false !default;\n\n/// Sets the visual grid color. Set with `!global` flag.\n///\n/// @type Color\n\n$visual-grid-color: #eee !default;\n\n/// Sets the `z-index` property of the visual grid. Can be `back` (behind content) or `front` (in front of content). Set with `!global` flag.\n///\n/// @type String\n\n$visual-grid-index: back !default;\n\n/// Sets the opacity property of the visual grid. Set with `!global` flag.\n///\n/// @type Number (unitless)\n\n$visual-grid-opacity: 0.4 !default;\n\n$visual-grid-breakpoints: () !default;\n",
		"@charset \"UTF-8\";\n\n/// Disable all deprecation warnings. Defaults to `false`. Set with a `!global` flag.\n///\n/// @type Bool\n\n$disable-warnings: false !default;\n\n@mixin -neat-warn($message) {\n  @if $disable-warnings == false {\n    @warn \"#{$message}\";\n  }\n}\n",
		"$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n",
		"@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property. It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.\n///\n/// @param {List} $query [block]\n///   List of arguments. Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).\n///\n///   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically adds a clear to the `*n+1` th element. Note that composite arguments such as `2n+1` do not support this feature.\n///\n///   **Deprecation warning**: The omega mixin will no longer take a `$direction` argument. To change the layout direction, use `row($direction)` or set `$default-layout-direction` instead.\n///\n/// @example scss - Usage\n///   .element {\n///     @include omega;\n///   }\n///\n///   .nth-element {\n///     @include omega(4n);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n) {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n+1) {\n///     clear: left;\n///   }\n\n@mixin omega($query: block, $direction: default) {\n  $table: belongs-to(table, $query);\n  $auto: belongs-to(auto, $query);\n\n  @if $direction != default {\n    @include -neat-warn(\"The omega mixin will no longer take a $direction argument. To change the layout direction, use the direction(){...} mixin.\");\n  } @else {\n    $direction: get-direction($layout-direction, $default-layout-direction);\n  }\n\n  @if $table {\n    @include -neat-warn(\"The omega mixin no longer removes padding in table layouts.\");\n  }\n\n  @if length($query) == 1 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n\n    @else if contains-display-value($query) and $table == false {\n      margin-#{$direction}: 0;\n    }\n\n    @else {\n      @include nth-child($query, $direction);\n    }\n  } @else if length($query) == 2 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    } @else {\n      @include nth-child(nth($query, 1), $direction);\n    }\n  } @else {\n    @include -neat-warn(\"Too many arguments passed to the omega() mixin.\");\n  }\n}\n\n@mixin nth-child($query, $direction) {\n  $opposite-direction: get-opposite-direction($direction);\n\n  &:nth-child(#{$query}) {\n    margin-#{$direction}: 0;\n  }\n\n  @if type-of($query) == number and unit($query) == \"n\" {\n    &:nth-child(#{$query}+1) {\n      clear: $opposite-direction;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Makes an element a outer container by centering it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display property of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Designates the element as a row of columns in the grid layout. It clears the floats on the element and sets its display property. Rows can't be nested, but there can be more than one row element—with different display properties—per layout.\n///\n/// @param {String} $display [default]\n///  Sets the display property of the element and the display context that will be used by its children. Can be `block` or `table`.\n///\n/// @param {String} $direction [$default-layout-direction]\n///  Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).\n///\n/// @example scss - Usage\n///  .element {\n///    @include row();\n///  }\n///\n/// @example css - CSS Output\n///  .element {\n///    *zoom: 1;\n///    display: block;\n///  }\n///\n/// .element:before, .element:after {\n///   content: \" \";\n///   display: table;\n/// }\n///\n/// .element:after {\n///   clear: both;\n/// }\n\n@mixin row($display: default, $direction: $default-layout-direction) {\n  @if $direction != $default-layout-direction {\n    @include -neat-warn(\"The $direction argument will be deprecated in future versions in favor of the direction(){...} mixin.\");\n  }\n\n  $layout-direction: $direction !global;\n\n  @if $display != default {\n    @include -neat-warn(\"The $display argument will be deprecated in future versions in favor of the display(){...} mixin.\");\n  }\n\n  @if $display == table {\n    display: table;\n    @include fill-parent;\n    table-layout: fixed;\n    $container-display-table: true !global;\n  } @else {\n    @include clearfix;\n    display: block;\n    $container-display-table: false !global;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Translates an element horizontally by a number of columns. Positive arguments shift the element to the active layout direction, while negative ones shift it to the opposite direction.\n///\n/// @param {Number (unitless)} $n-columns [1]\n///   Number of columns by which the element shifts.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -25.58941%;\n///   }\n\n@mixin shift($n-columns: 1) {\n  @include shift-in-context($n-columns);\n}\n\n/// Translates an element horizontally by a number of columns, in a specific nesting context.\n///\n/// @param {List} $shift\n///   A list containing the number of columns to shift (`$columns`) and the number of columns of the parent element (`$container-columns`).\n///\n///   The two values can be separated with any string such as `of`, `/`, etc.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3 of 6);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -52.41458%;\n///   }\n\n@mixin shift-in-context($shift: $columns of $container-columns) {\n  $n-columns: nth($shift, 1);\n  $parent-columns: container-shift($shift) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  margin-#{$opposite-direction}: $n-columns * flex-grid(1, $parent-columns) + $n-columns * flex-gutter($parent-columns);\n\n  // Reset nesting context\n  $parent-columns: $grid-columns !global;\n}\n",
		"@charset \"UTF-8\";\n\n/// Adds padding to the element.\n///\n/// @param {List} $padding [flex-gutter()]\n///   A list of padding value(s) to use. Passing `default` in the list will result in using the gutter width as a padding value.\n///\n/// @example scss - Usage\n///   .element {\n///     @include pad(30px -20px 10px default);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding: 30px -20px 10px 2.35765%;\n///   }\n\n@mixin pad($padding: flex-gutter()) {\n  $padding-list: null;\n  @each $value in $padding {\n    $value: if($value == 'default', flex-gutter(), $value);\n    $padding-list: join($padding-list, $value);\n  }\n  padding: $padding-list;\n}\n",
		"@charset \"UTF-8\";\n\n/// Forces the element to fill its parent container.\n///\n/// @example scss - Usage\n///   .element {\n///     @include fill-parent;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     width: 100%;\n///     box-sizing: border-box;\n///   }\n\n@mixin fill-parent() {\n  width: 100%;\n\n  @if $border-box-sizing == false {\n    box-sizing: border-box;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\n///\n/// @param {List} $query\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\n///\n///\n/// @param {Number (unitless)} $total-columns [$grid-columns]\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   .responsive-element {\n///      @include media(769px) {\n///        @include span-columns(6);\n///      }\n///   }\n///\n///  .new-context-element {\n///    @include media(min-width 320px max-width 480px, 6) {\n///      @include span-columns(6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///  @media screen and (min-width: 769px) {\n///    .responsive-element {\n///      display: block;\n///      float: left;\n///      margin-right: 2.35765%;\n///      width: 48.82117%;\n///    }\n///\n///    .responsive-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n///\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\n///    .new-context-element {\n///      display: block;\n///      float: left;\n///      margin-right: 4.82916%;\n///      width: 100%;\n///    }\n///\n///    .new-context-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns !global;\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  } @else {\n    $loop-to: length($query);\n    $media-query: \"screen and \";\n    $default-grid-columns: $grid-columns;\n    $grid-columns: $total-columns !global;\n\n    @if is-not(is-even(length($query))) {\n      $grid-columns: nth($query, $loop-to) !global;\n      $loop-to: $loop-to - 1;\n    }\n\n    $i: 1;\n    @while $i <= $loop-to {\n      $media-query: $media-query + \"(\" + nth($query, $i) + \": \" + nth($query, $i + 1) + \") \";\n\n      @if ($i + 1) != $loop-to {\n        $media-query: $media-query + \"and \";\n      }\n\n      $i: $i + 2;\n    }\n\n    @media #{$media-query} {\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n@mixin breakpoint($query:$feature $value $columns, $total-columns: $grid-columns) {\n  @include -neat-warn(\"The breakpoint() mixin was renamed to media() in Neat 1.0. Please update your project with the new syntax before the next version bump.\");\n\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns;\n      @content;\n      $grid-columns: $default-grid-columns;\n    }\n  } @else if length($query) == 2 {\n    @media screen and (nth($query, 1): nth($query, 2)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns;\n      @content;\n      $grid-columns: $default-grid-columns;\n    }\n  } @else if length($query) == 3 {\n    @media screen and (nth($query, 1): nth($query, 2)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: nth($query, 3);\n      @content;\n      $grid-columns: $default-grid-columns;\n    }\n  } @else if length($query) == 4 {\n    @media screen and (nth($query, 1): nth($query, 2)) and (nth($query, 3): nth($query, 4)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns;\n      @content;\n      $grid-columns: $default-grid-columns;\n    }\n  } @else if length($query) == 5 {\n    @media screen and (nth($query, 1): nth($query, 2)) and (nth($query, 3): nth($query, 4)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: nth($query, 5);\n      @content;\n      $grid-columns: $default-grid-columns;\n    }\n  } @else {\n    @include -neat-warn(\"Wrong number of arguments for breakpoint(). Read the documentation for more details.\");\n  }\n}\n\n@mixin nth-omega($nth, $display: block, $direction: default) {\n  @include -neat-warn(\"The nth-omega() mixin is deprecated. Please use omega() instead.\");\n  @include omega($nth $display, $direction);\n}\n\n/// Resets the active display property to `block`. Particularly useful when changing the display property in a single row.\n///\n/// @example scss - Usage\n///   .element {\n///     @include row(table);\n///     // Context changed to table display\n///   }\n///\n///   @include reset-display;\n///   // Context is reset to block display\n\n@mixin reset-display {\n  $container-display-table: false !global;\n  @include -neat-warn(\"Resetting $display will be deprecated in future versions in favor of the display(){...} mixin.\");\n}\n\n/// Resets the active layout direction to the default value set in `$default-layout-direction`. Particularly useful when changing the layout direction in a single row.\n///\n/// @example scss - Usage\n///   .element {\n///     @include row($direction: RTL);\n///     // Context changed to right-to-left\n///   }\n///\n///   @include reset-layout-direction;\n///   // Context is reset to left-to-right\n\n@mixin reset-layout-direction {\n  $layout-direction: $default-layout-direction !global;\n  @include -neat-warn(\"Resetting $direction will be deprecated in future versions in favor of the direction(){...} mixin.\");\n}\n\n/// Resets both the active layout direction and the active display property.\n///\n/// @example scss - Usage\n///   .element {\n///     @include row(table, RTL);\n///     // Context changed to table table and right-to-left\n///   }\n///\n///   @include reset-all;\n///   // Context is reset to block display and left-to-right\n\n@mixin reset-all {\n  @include reset-display;\n  @include reset-layout-direction;\n}\n",
		"@charset \"UTF-8\";\n\n@mixin grid-column-gradient($values...) {\n  background-image: -webkit-linear-gradient(left, $values);\n  background-image: -moz-linear-gradient(left, $values);\n  background-image: -ms-linear-gradient(left, $values);\n  background-image: -o-linear-gradient(left, $values);\n  background-image: unquote(\"linear-gradient(to left, #{$values})\");\n}\n\n@if $visual-grid == true or $visual-grid == yes {\n  body:before {\n    @include grid-column-gradient(gradient-stops($grid-columns));\n    content: \"\";\n    display: inline-block;\n    height: 100%;\n    left: 0;\n    margin: 0 auto;\n    max-width: $max-width;\n    opacity: $visual-grid-opacity;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    width: 100%;\n\n    @if $visual-grid-index == back {\n      z-index: -1;\n    }\n\n    @else if $visual-grid-index == front {\n      z-index: 9999;\n    }\n\n    @each $breakpoint in $visual-grid-breakpoints {\n      @if $breakpoint {\n        @include media($breakpoint) {\n          @include grid-column-gradient(gradient-stops($grid-columns));\n        }\n      }\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Changes the display property used by other mixins called in the code block argument.\n///\n/// @param {String} $display [block]\n///   Display value to be used within the block. Can be `table` or `block`.\n///\n/// @example scss\n///   @include display-context(table) {\n///    .display-table {\n///      @include span-columns(6);\n///     }\n///   }\n///\n/// @example css\n///   .display-table {\n///      display: table-cell;\n///      ...\n///   }\n\n@mixin display-context($display: block) {\n  $scope-display: $container-display-table;\n  $container-display-table: $display == table !global;\n\n  @content;\n\n  $container-display-table: $scope-display !global;\n}\n",
		"@charset \"UTF-8\";\n\n/// Changes the direction property used by other mixins called in the code block argument.\n///\n/// @param {String} $direction [left-to-right]\n///   Layout direction to be used within the block. Can be `left-to-right` or `right-to-left`.\n///\n/// @example scss - Usage\n///   @include direction-context(right-to-left) {\n///    .right-to-left-block {\n///      @include span-columns(6);\n///     }\n///   }\n///\n/// @example css - CSS Output\n///   .right-to-left-block {\n///     float: right;\n///      ...\n///   }\n\n@mixin direction-context($direction: left-to-right) {\n  $scope-direction: $layout-direction;\n\n  @if to-lower-case($direction) == \"left-to-right\" {\n    $layout-direction: LTR !global;\n  } @else if to-lower-case($direction) == \"right-to-left\" {\n    $layout-direction: RTL !global;\n  }\n\n  @content;\n\n  $layout-direction: $scope-direction !global;\n}\n",
		"// This is the root of custom stylesheets imported by css/main.scss\n\n@import \"variables\";\n@import \"grid\";\n\n@import \"article_body\";\n@import \"article_meta\";\n@import \"article_peripheral\";\n@import \"audio\";\n@import \"base\";\n@import \"contacts\";\n@import \"featured_articles\";\n@import \"figure\";\n@import \"footnotes\";\n@import \"header_and_footer\";\n@import \"jekyll_linkpreview\";\n@import \"lists\";\n@import \"misc\";\n@import \"responsive_embed\";\n@import \"tables\";\n@import \"typography\";\n",
		"@charset \"UTF-8\";\n\n// Typography\n$base-font-family: Verdana, \"游ゴシック\", YuGothic, \"Hiragino Kaku Gothic ProN\", Meiryo, sans-serif;\n$header-font-family: $base-font-family;\n\n// Unit Sizes\n$em-base: 18px;\n\n$bourbon: (\n    \"modular-scale-base\": $em-base,\n    \"modular-scale-ratio\": $major-second,\n);\n\n// Font Sizes\n$base-font-size: $em-base;\n\n// Line height\n$base-line-height: 2.0;\n$header-line-height: 1.5;\n\n// Other Sizes\n$base-border-radius: 0.5em;\n$base-spacing: $base-line-height * 1em;\n$base-padding: 1em;\n\n// Colors\n$base-accent-color: #CC4400;\n$base-main-color: #208DC3;\n$base-background-color: lighten($base-main-color, 55);\n$base-font-color: darken($base-main-color, 25);\n$base-inverted-color: lighten($base-main-color, 55);\n$base-inverted-background-color: darken($base-main-color, 35);\n\n// Link Colors\n$base-link-color: lighten($base-font-color, 20);\n$base-link-underline-color: lighten($base-link-color, 20);\n$base-hover-link-color: darken($base-link-color, 20);\n$base-button-color: $base-inverted-background-color;\n$base-button-text-color: $base-inverted-color;\n$base-hover-button-color: $base-hover-link-color;\n\n// Border color\n$base-border-color: $base-font-color;\n$base-border: 1px solid $base-border-color;\n",
		"@import \"neat/neat-helpers\"; // or \"../neat/neat-helpers\" when not in Rails\n\n// Neat Overrides\n$column: 90px;\n$gutter: 30px;\n$grid-columns: 6;\n$max-width: 760px;\n// $visual-grid: true;\n\n// Neat Breakpoints\n$first-breakpoint-value: 480px;\n$large-viewport: new-breakpoint(min-width $first-breakpoint-value + 1 12);\n",
		"// Functions\n@import \"functions/private\";\n@import \"functions/new-breakpoint\";\n\n// Settings\n@import \"settings/grid\";\n@import \"settings/visual-grid\";\n@import \"settings/disable-warnings\";\n",
		"// Not function for Libsass compatibility\n// https://github.com/sass/libsass/issues/368\n@function is-not($value) {\n  @return if($value, false, true);\n}\n\n// Checks if a number is even\n@function is-even($int) {\n  @return $int % 2 == 0;\n}\n\n// Checks if an element belongs to a list or not\n@function belongs-to($tested-item, $list) {\n  @return is-not(not-belongs-to($tested-item, $list));\n}\n\n@function not-belongs-to($tested-item, $list) {\n  @return is-not(index($list, $tested-item));\n}\n\n// Contains display value\n@function contains-display-value($query) {\n  @return belongs-to(table, $query)\n       or belongs-to(block, $query)\n       or belongs-to(inline-block, $query)\n       or belongs-to(inline, $query);\n}\n\n// Parses the first argument of span-columns()\n@function container-span($span: $span) {\n  @if length($span) == 3 {\n    $container-columns: nth($span, 3);\n    @return $container-columns;\n  } @else if length($span) == 2 {\n    $container-columns: nth($span, 2);\n    @return $container-columns;\n  }\n\n  @return $grid-columns;\n}\n\n@function container-shift($shift: $shift) {\n  $parent-columns: $grid-columns !default !global;\n\n  @if length($shift) == 3 {\n    $container-columns: nth($shift, 3);\n    @return $container-columns;\n  } @else if length($shift) == 2 {\n    $container-columns: nth($shift, 2);\n    @return $container-columns;\n  }\n\n  @return $parent-columns;\n}\n\n// Generates a striped background\n@function gradient-stops($grid-columns, $color: $visual-grid-color) {\n  $transparent: transparent;\n\n  $column-width: flex-grid(1, $grid-columns);\n  $gutter-width: flex-gutter($grid-columns);\n  $column-offset: $column-width;\n\n  $values: ($transparent 0, $color 0);\n\n  @for $i from 1 to $grid-columns*2 {\n    @if is-even($i) {\n      $values: append($values, $transparent $column-offset, comma);\n      $values: append($values, $color $column-offset, comma);\n      $column-offset: $column-offset + $column-width;\n    } @else {\n      $values: append($values, $color $column-offset, comma);\n      $values: append($values, $transparent $column-offset, comma);\n      $column-offset: $column-offset + $gutter-width;\n    }\n  }\n\n  @return $values;\n}\n\n// Layout direction\n@function get-direction($layout, $default) {\n  $direction: null;\n\n  @if to-upper-case($layout) == \"LTR\" or to-upper-case($layout) == \"RTL\" {\n    $direction: direction-from-layout($layout);\n  } @else {\n    $direction: direction-from-layout($default);\n  }\n\n  @return $direction;\n}\n\n@function direction-from-layout($layout) {\n  $direction: null;\n\n  @if to-upper-case($layout) == \"LTR\" {\n    $direction: right;\n  } @else {\n    $direction: left;\n  }\n\n  @return $direction;\n}\n\n@function get-opposite-direction($direction) {\n  $opposite-direction: left;\n\n  @if $direction == \"left\" {\n    $opposite-direction: right;\n  }\n\n  @return $opposite-direction;\n}\n",
		"@charset \"UTF-8\";\n\n/// Returns a media context (media query / grid context) that can be stored in a variable and passed to `media()` as a single-keyword argument. Media contexts defined using `new-breakpoint` are used by the visual grid, as long as they are defined before importing Neat.\n///\n/// @param {List} $query\n///   A list of media query features and values. Each `$feature` should have a corresponding `$value`.\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`). For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n/// @param {Number (unitless)} $total-columns ($grid-columns)\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   $mobile: new-breakpoint(max-width 480px 4);\n///\n///   .element {\n///     @include media($mobile) {\n///       @include span-columns(4);\n///     }\n///   }\n///\n/// @example css - CSS Output\n///   @media screen and (max-width: 480px) {\n///     .element {\n///       display: block;\n///       float: left;\n///       margin-right: 7.42297%;\n///       width: 100%;\n///     }\n///     .element:last-child {\n///       margin-right: 0;\n///     }\n///   }\n\n@function new-breakpoint($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    $query: $default-feature nth($query, 1) $total-columns;\n  } @else if is-even(length($query)) {\n    $query: append($query, $total-columns);\n  }\n\n  @if is-not(belongs-to($query, $visual-grid-breakpoints)) {\n    $visual-grid-breakpoints: append($visual-grid-breakpoints, $query, comma) !global;\n  }\n\n  @return $query;\n}\n",
		"@charset \"UTF-8\";\n\n/// Sets the relative width of a single grid column. The unit used should be the same one used to define `$gutter`. To learn more about golden-ratio() see [Bourbon docs](http://bourbon.io/docs/#golden-ratio). Set with a `!global` flag.\n///\n/// @type Number (Unit)\n\n$column: golden-ratio(1em, 3) !default;\n\n/// Sets the relative width of a single grid gutter. The unit used should be the same one used to define `$column`. To learn more about golden-ratio() see [Bourbon docs](http://bourbon.io/docs/#golden-ratio). Set with the `!global` flag.\n///\n/// @type Number (Unit)\n\n$gutter: golden-ratio(1em, 1) !default;\n\n/// Sets the total number of columns in the grid. Its value can be overridden inside a media query using the `media()` mixin. Set with the `!global` flag.\n///\n/// @type Number (Unitless)\n\n$grid-columns: 12 !default;\n\n/// Sets the max-width property of the element that includes `outer-container()`. To learn more about `em()` see [Bourbon docs](http://bourbon.io/docs/#px-to-em). Set with the `!global` flag.\n///\n/// @type Number (Unit)\n///\n$max-width: em(1088) !default;\n\n/// When set to true, it sets the box-sizing property of all elements to `border-box`. Set with a `!global` flag.\n///\n/// @type Bool\n///\n/// @example css - CSS Output\n///   html {\n///     -webkit-box-sizing: border-box;\n///     -moz-box-sizing: border-box;\n///     box-sizing: border-box; }\n///\n///   *, *:before, *:after {\n///     -webkit-box-sizing: inherit;\n///     -moz-box-sizing: inherit;\n///     box-sizing: inherit;\n///   }\n\n$border-box-sizing: true !default;\n\n/// Sets the default [media feature](http://www.w3.org/TR/css3-mediaqueries/#media) that `media()` and `new-breakpoint()` revert to when only a breakpoint value is passed. Set with a `!global` flag.\n///\n/// @type String\n\n$default-feature: min-width; // Default @media feature for the breakpoint() mixin\n\n///Sets the default layout direction of the grid. Can be `LTR` or `RTL`. Set with a `!global` flag.\n///\n///@type String\n\n$default-layout-direction: LTR !default;\n",
		"@charset \"UTF-8\";\n\n/// Displays the visual grid when set to true. The overlaid grid may be few pixels off depending on the browser's rendering engine and pixel rounding algorithm. Set with the `!global` flag.\n///\n/// @type Bool\n\n$visual-grid: false !default;\n\n/// Sets the visual grid color. Set with `!global` flag.\n///\n/// @type Color\n\n$visual-grid-color: #eee !default;\n\n/// Sets the `z-index` property of the visual grid. Can be `back` (behind content) or `front` (in front of content). Set with `!global` flag.\n///\n/// @type String\n\n$visual-grid-index: back !default;\n\n/// Sets the opacity property of the visual grid. Set with `!global` flag.\n///\n/// @type Number (unitless)\n\n$visual-grid-opacity: 0.4 !default;\n\n$visual-grid-breakpoints: () !default;\n",
		"@charset \"UTF-8\";\n\n/// Disable all deprecation warnings. Defaults to `false`. Set with a `!global` flag.\n///\n/// @type Bool\n\n$disable-warnings: false !default;\n\n@mixin -neat-warn($message) {\n  @if $disable-warnings == false {\n    @warn \"#{$message}\";\n  }\n}\n",
		".article-body {\n  @include clearfix;\n  \n  &:last-child:after {\n    display: block;\n    content: \"\";\n    clear: both;\n  }\n  \n  a {\n    text-decoration: underline $base-link-underline-color;\n  }\n  \n  ul {\n    @extend %default-ul;\n  }\n  \n  ol {\n    @extend %default-ol;\n  }\n  \n  dl {\n    dt {\n      margin: $base-spacing/2 0;\n    }\n    \n    dd {\n      margin: $base-spacing/2 0 $base-spacing 0;\n    }\n  }\n  \n  pre {\n    overflow-x: scroll;\n  }\n  \n  .page-description {\n    margin: $base-spacing 0;\n    padding: $base-spacing/2;\n    border: $base-border;\n  }\n  \n  .big-quote {\n    border: none;\n    margin: 0;\n    padding: $base-spacing * 0.5;\n    font-size: modular-scale(2);\n    font-style: italic;\n  }\n}\n",
		".article.meta {\n  $color: $base-font-color;\n  margin: $base-spacing 0;\n\n  .link {\n    display: flex;\n    flex-flow: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    color: $color;\n    text-decoration: none;\n    \n    .thumbnail {\n      flex: 1 0 150px;\n      width: 100%;\n      margin: 0;\n      padding: 20px;\n      object-fit: contain;\n      object-position: 50% 50%;\n      \n      @include media($large-viewport) {\n        flex: 1 0 150px;\n        margin: 0;\n        padding: 20px;\n        min-width: 100px;\n        min-height: 100px;\n        max-width: 200px;\n        max-height: 200px;\n        object-fit: contain;\n        object-position: 0% 0%;\n      }\n    }\n\n    .text {\n      flex: 1 2 350px;\n      padding: 10px 0;\n\n      .title {\n        font-size: modular-scale(2);\n        font-weight: bold;\n        line-height: $header-line-height;\n        margin: 0 0 $base-spacing/3 0;\n\n        .meta.title {\n          margin: 0;\n          font-size: modular-scale(3);\n        }\n        \n        .meta.subtitle {\n          display: block;\n          margin-top: $base-spacing/2;\n          font-size: modular-scale(0);\n        }\n      }\n      \n      .meta.description {\n        margin-bottom: $base-padding;\n      }\n\n      .meta.time {\n        font-size: modular-scale(-1);\n      }\n    }\n  }\n}\n",
		"article header {\n  margin-bottom: $base-spacing;\n  \n  .meta.subtitle {\n    display: block;\n    margin-top: $base-spacing/2;\n    font-size: modular-scale(2);\n  }\n\n  .meta.time {\n    font-size: modular-scale(-1);\n    margin-top: $base-spacing / 2;\n  }\n}\n",
		"audio {\n  display: block;\n  width: 100%;\n  margin: 2em 0;\n}\n\naudio::-webkit-media-controls-panel {\n  background-color: $base-accent-color;\n}\n",
		"body {\n  margin: 0;\n  word-wrap: break-word;\n}\n\n.container {\n  @include outer-container;\n  padding: 0 $base-spacing;\n}\n\n.main.container {\n  padding-top: $base-spacing;\n}\n\nmain {\n  h1, h2, h3, h4, h5, h6 {\n    margin: $base-spacing 0 $base-spacing/2 0;\n  }\n}\n\nsmall,\n.small {\n  font-size: modular-scale(-1);\n}\n",
		".contacts {\n  list-style-type: none;\n  padding-left: 0 !important;\n  margin: $base-spacing 0;\n\n  li {\n    display: inline-block;\n    text-align: center;\n    line-height: 1.0;\n    font-size: modular-scale(-3);\n    img {\n      width: 5em;\n      margin: 2px;\n    }\n    a {\n      text-decoration: none;\n    }\n  }\n}\n",
		".featured.posts {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}",
		".article-body {\n  figure {\n    margin: $base-spacing*2 0;\n    padding: 0;\n    display: flex;\n    align-items: flex-start;\n    flex-flow: row wrap;\n    justify-content: center;\n\n    &.center { text-align: center; }\n    &.left { text-align: left; }\n    &.right { text-align: right; }\n\n    figcaption {\n      font-size: modular-scale(-1);\n      padding: 0 1em;\n\n      small {\n        font-size: modular-scale(-3);\n      }\n    }\n  }\n\n  p > img,\n  video,\n  .fig {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    text-align: center;\n  }\n\n  .fig-medium {\n    @include media($large-viewport) {\n      padding: 0 20%;\n    }\n  }\n\n  .fig-small {\n    @include media($large-viewport) {\n      padding: 0.5em 0 0 2em;\n      width: 40%;\n      float: right;\n    }\n  }\n}",
      ".footnote {\n    font-size: modular-scale(-1);\n    text-decoration: none;\n}\n\n.reversefootnote {\n    text-decoration: none;\n}\n\n.footnotes {\n    margin-top: $base-spacing;\n    border-top: $base-border;\n    padding-top: $base-spacing;\n    font-size: modular-scale(-1);\n    clear: both;\n}\n\n.footnote,\n.footnotes > ol > li {\n    position: relative;\n    border-top: 52px solid transparent;\n    margin: -30px 0 0;\n    -webkit-background-clip: padding-box;\n    -moz-background-clip: padding;\n    background-clip: padding-box;\n }\n \n #target:before {\n    content: \"\";\n    position: absolute;\n    top: -2px;\n    left: 0;\n    right: 0;\n    border-top: 2px solid #ccc;\n }",
      ".site.header,\n.site.footer {\n  width: 100%;\n  color: $base-inverted-color;\n  background-color: $base-inverted-background-color;\n  font-size: modular-scale(-1);\n  // opacity: 0.95;\n\n  &, a, li {\n    color: $base-inverted-color;\n  }\n\n  a:focus {\n    outline-color: $base-inverted-color;\n  }\n  \n  a:hover,\n  a:focus {\n    color: darken($base-inverted-color, 20);\n  }\n}\n\n.site.header {\n  position: fixed;\n  z-index: 100;\n  white-space: nowrap;\n  overflow-x: scroll;\n  padding: $base-padding/4;\n\n  .top_navigation {\n    .vid {\n      width: 2em;\n      height: 2em;\n      vertical-align: middle;\n    }\n  \n    ul {\n      li {\n        list-style: none;\n        display: inline-block;\n        padding-right: 1em;\n  \n        &.active {\n          text-decoration: underline $base-link-underline-color;\n        }\n      }\n    }\n  }\n}\n\n.site.footer {\n  margin-top: $base-spacing;\n  padding: $base-padding 0;\n\n  .copyrights {\n    img {\n      vertical-align: middle;\n    }\n  }\n}\n",
      ".jekyll-linkpreview-wrapper {\n  margin: $base-spacing 0;\n}\n\n.jekyll-linkpreview-wrapper p a[href] {\n  display: none;\n}\n\n.jekyll-linkpreview-wrapper-inner {\n  border: 1px solid rgba(0,0,0,.1);\n  padding: $base-padding;\n}\n\n.jekyll-linkpreview-content {\n  position: relative;\n  overflow: hidden;\n}\n\n.jekyll-linkpreview-image {\n  padding: 1em;\n}\n\n.jekyll-linkpreview-title {\n  margin: 0;\n  font-size: modular-scale(0);\n}\n\n.jekyll-linkpreview-description {\n  font-size: modular-scale(-1);\n}\n\n.jekyll-linkpreview-footer {\n  font-size: modular-scale(-2);\n}\n",
      "ul,\nol {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n\n  &%default-ul {\n    list-style-type: disc;\n    margin-bottom: $base-spacing / 2;\n    padding-left: $base-spacing;\n  }\n\n  &%default-ol {\n    list-style-type: decimal;\n    margin-bottom: $base-spacing / 2;\n    padding-left: $base-spacing;\n  }\n}\n\ndl {\n  margin-bottom: $base-spacing / 2;\n\n  dt {\n    font-weight: bold;\n    margin-top: $base-spacing / 2;\n  }\n\n  dd {\n    margin: 0;\n  }\n}\n",
      "",
      ".article-body {\n  .responsive.embed {\n    margin: $base-spacing 0;\n    height: 0;\n    overflow: hidden;\n    position: relative;\n\n    embed,\n    object,\n    video,\n    iframe {\n      @include position(absolute, 0px null null 0px);\n      @include size(100%);\n    }\n  }\n\n  .responsive.embed.aspect16x9 {\n\n    padding-bottom: 56.25%;\n  }\n\n  .responsive.embed.aspect4x3 {\n    padding-bottom: 75%;\n  }\n}",
      "table {\n  border-collapse: collapse;\n  margin: ($base-spacing / 2) 0;\n  table-layout: fixed;\n  width: 100%;\n}\n\nth {\n  border-bottom: 1px solid darken($base-border-color, 15);\n  font-weight: bold;\n  padding: ($base-spacing / 2) 0;\n  text-align: left;\n}\n\ntd {\n  border-bottom: $base-border;\n  padding: $base-spacing / 2;\n}\n\ntr,\ntd,\nth {\n  vertical-align: middle;\n}\n",
      "body {\n    -webkit-font-smoothing: antialiased;\n    background-color: $base-background-color;\n    color: $base-font-color;\n    font-family: $base-font-family;\n    font-size: $base-font-size;\n    line-height: $base-line-height;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    font-family: $header-font-family;\n    line-height: $header-line-height;\n    margin: 0;\n}\n\nh1 {\n    font-size: modular-scale(5);\n}\n\nh2 {\n    font-size: modular-scale(4);\n}\n\nh3 {\n    font-size: modular-scale(3);\n}\n\nh4 {\n    font-size: modular-scale(2);\n}\n\nh5 {\n    font-size: modular-scale(1);\n}\n\nh6 {\n    font-size: modular-scale(0);\n}\n\np {\n    margin: 0 0 ($base-spacing / 2);\n}\n\na {\n    color: $base-link-color;\n    text-decoration: none;\n    \n    &:hover {\n        color: $base-hover-link-color;\n        text-decoration: underline $base-link-underline-color;\n    }\n    \n    &:active, &:focus {\n        color: $base-hover-link-color;\n        text-decoration: underline $base-link-underline-color;\n    }\n}\n\nhr {\n    border-bottom: $base-border;\n    border-left: none;\n    border-right: none;\n    border-top: none;\n    margin: $base-spacing 0;\n}\n\nimg,\npicture {\n    margin: 0;\n    max-width: 100%;\n}\n\nblockquote {\n    border-left: 2px solid $base-border-color;\n    margin: $base-spacing 0;\n    padding-left: $base-spacing / 2;\n}\n\ncite {\n    font-style: italic;\n    \n    &:before {\n        content: \"\\2014 \\00A0\";\n    }\n}\n"
      ],
      "names": [],
      "mappings": "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"
      }